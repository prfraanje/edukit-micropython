//      down
//REPL: box rad 10px "repl task" "read, eval/exec, print" "urepl.py" mono fit
//      arrow <->
//CTRL: box rad 10px "control(pid,state_space)" mono "mpy_edukit.py" mono "run controller and some recording/logging" fit
//      arrow <->
//CALC: box rad 10px "PID.control" mono "ucontrol.py" mono  "evaluate one run of PID controller" fit
//      arrow <->
//      box rad 10px "PID.get_sensor()" mono


//	box rad 10px "pid" mono "PID class object" mono

right
AR1:	arrow -> "pid.r1" mono above
SUM1:	circle width 0.5cm
	arrow -> "pid.e1" mono above 
PID1:	box rad 10px "pid.run1" mono "pid.Kp1, pid.Ki1, pid.Kd1" mono fit
	arrow ->
SUM2:	circle width 0.5cm
	arrow ->
PEND:	box rad 10px "pendulum" big big "including stepper and encoder" big fit
	arrow from 0.3cm below PEND.e then right 1.5cm "pid.y1" mono above
	arrow from 0.3cm below PEND.e right 0.75cm then down 1cm then right until even with SUM1.s then to SUM1.s
	line invis from 4rd vertex of last arrow to 5th vertex of last arrow "- " big big rjust
AR2:	arrow from 2.5cm below AR1.w then right "pid.r2" mono above
SUM3:	circle width 0.5cm
	arrow -> "pid.e2" mono above 
PID2:	box rad 10px "pid.run2" mono "pid.Kp2, pid.Ki2, pid.Kd2" mono fit
	arrow from PID2.e right until even with SUM2.s then to SUM2.s
AR3:	arrow from 0.3cm above PEND.e then right 2.5cm "pid.y2" mono above
AR4:	arrow from 2cm right of AR3.w then down 4cm then left until even with SUM3.s then to SUM3.s
	line invis from 3rd vertex of last arrow to 4th vertex of last arrow "- " big big rjust
	arrow from 1cm above SUM1.n then to SUM1.n " reference_add" mono ljust
	arrow from 1cm above SUM2.n then to SUM2.n " control_add" mono ljust	